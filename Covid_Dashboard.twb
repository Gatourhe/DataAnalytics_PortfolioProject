<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau lable 1)' inline='true' name='federated.0b2kza51glvy481euy0hx19667to' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau lable 1' name='excel-direct.0jm7a7u06qpelw165hqcj0oaic79'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Gatourh_AYPA/Desktop/Portfolio Projects/Project1/Tableau lable 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jm7a7u06qpelw165hqcj0oaic79' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_cases' ordinal='0' />
            <column datatype='integer' name='Total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jm7a7u06qpelw165hqcj0oaic79' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_cases' ordinal='0' />
            <column datatype='integer' name='Total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_820CF8157716459AA3C29B4C37F7C74D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_820CF8157716459AA3C29B4C37F7C74D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_820CF8157716459AA3C29B4C37F7C74D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Total cases' datatype='integer' name='[Total_cases]' role='measure' type='quantitative' />
      <column caption='Total deaths' datatype='integer' name='[Total_deaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_820CF8157716459AA3C29B4C37F7C74D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_820CF8157716459AA3C29B4C37F7C74D'>
            <properties context=''>
              <relation connection='excel-direct.0jm7a7u06qpelw165hqcj0oaic79' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Total_cases' ordinal='0' />
                  <column datatype='integer' name='Total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau lable 2)' inline='true' name='federated.1rcndce0lxjqqt14c3znm0iul3rz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau lable 2' name='excel-direct.15ixrbi14gamkj189ulyn0nl77u5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Gatourh_AYPA/Desktop/Portfolio Projects/Project1/Tableau lable 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15ixrbi14gamkj189ulyn0nl77u5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15ixrbi14gamkj189ulyn0nl77u5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9789F89677824EF5BE54BD896ED20107]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Death_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Death_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Death_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9789F89677824EF5BE54BD896ED20107]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9789F89677824EF5BE54BD896ED20107]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9789F89677824EF5BE54BD896ED20107'>
            <properties context=''>
              <relation connection='excel-direct.15ixrbi14gamkj189ulyn0nl77u5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='Total_Death_Count' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau lable 3)' inline='true' name='federated.1df6xy81n27aze12cdhq20xwt3h4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau lable 3' name='excel-direct.1qt8fhv0bpg6kr13u4kqq0gzduu3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Gatourh_AYPA/Desktop/Portfolio Projects/Project1/Tableau lable 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1qt8fhv0bpg6kr13u4kqq0gzduu3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1qt8fhv0bpg6kr13u4kqq0gzduu3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4C9FE9151794DEDAFEA1B1A99ABB7BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4C9FE9151794DEDAFEA1B1A99ABB7BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4C9FE9151794DEDAFEA1B1A99ABB7BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4C9FE9151794DEDAFEA1B1A99ABB7BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A4C9FE9151794DEDAFEA1B1A99ABB7BA]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A4C9FE9151794DEDAFEA1B1A99ABB7BA'>
            <properties context=''>
              <relation connection='excel-direct.1qt8fhv0bpg6kr13u4kqq0gzduu3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau lable 4)' inline='true' name='federated.1anrqvl08dp84516r1b9f0v2ajfu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau lable 4' name='excel-direct.0yprh2p1w99vqd16of5dc01enve3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Gatourh_AYPA/Desktop/Portfolio Projects/Project1/Tableau lable 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0yprh2p1w99vqd16of5dc01enve3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='percent_Population_Infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0yprh2p1w99vqd16of5dc01enve3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='percent_Population_Infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80D53290D2E1438497F2AA68236DD0DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80D53290D2E1438497F2AA68236DD0DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80D53290D2E1438497F2AA68236DD0DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_Infection_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_Infection_Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80D53290D2E1438497F2AA68236DD0DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percent_Population_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_80D53290D2E1438497F2AA68236DD0DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_80D53290D2E1438497F2AA68236DD0DA]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='highest Infection Count' datatype='integer' name='[highest_Infection_Count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='percent Population Infected' datatype='real' name='[percent_Population_Infected]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#49525e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_80D53290D2E1438497F2AA68236DD0DA'>
            <properties context=''>
              <relation connection='excel-direct.0yprh2p1w99vqd16of5dc01enve3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_Infection_Count' ordinal='3' />
                  <column datatype='real' name='percent_Population_Infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_F09B76C17784413DA9A478EB1A35F75C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_108C8EA09D394269B8518019D6CD8B78]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_2562FEED47B741FFB3DF067A3834DE1C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_AF30D136C6914B8982EA5ABC9E188277]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau lable 1)' name='federated.0b2kza51glvy481euy0hx19667to' />
          </datasources>
          <datasource-dependencies datasource='federated.0b2kza51glvy481euy0hx19667to'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column caption='Total cases' datatype='integer' name='[Total_cases]' role='measure' type='quantitative' />
            <column caption='Total deaths' datatype='integer' name='[Total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_cases]' derivation='Sum' name='[sum:Total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_deaths]' derivation='Sum' name='[sum:Total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b2kza51glvy481euy0hx19667to].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b2kza51glvy481euy0hx19667to].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b2kza51glvy481euy0hx19667to].[sum:Total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b2kza51glvy481euy0hx19667to].[sum:Total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0b2kza51glvy481euy0hx19667to].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0b2kza51glvy481euy0hx19667to].[sum:Total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0b2kza51glvy481euy0hx19667to].[sum:Total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0b2kza51glvy481euy0hx19667to].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0b2kza51glvy481euy0hx19667to].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0b2kza51glvy481euy0hx19667to].[:Measure Names]' value='122' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='text-format' field='[federated.0b2kza51glvy481euy0hx19667to].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#468bd1' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='background-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#666666' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='2' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0b2kza51glvy481euy0hx19667to].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.6151933670043945' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0b2kza51glvy481euy0hx19667to].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BAF8B78B-C39D-4FE9-B178-35D8ECA7D72E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Total Deaths  Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau lable 2)' name='federated.1rcndce0lxjqqt14c3znm0iul3rz' />
          </datasources>
          <datasource-dependencies datasource='federated.1rcndce0lxjqqt14c3znm0iul3rz'>
            <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Death_Count]' derivation='Sum' name='[sum:Total_Death_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' />
          </filter>
          <manual-sort column='[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rcndce0lxjqqt14c3znm0iul3rz].[sum:Total_Death_Count:qk]' scope='rows' value='Total Death ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rcndce0lxjqqt14c3znm0iul3rz].[sum:Total_Death_Count:qk]</rows>
        <cols>[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{8E6BA7B8-7799-4788-8680-2382C17983CA}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau lable 3)' name='federated.1df6xy81n27aze12cdhq20xwt3h4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1df6xy81n27aze12cdhq20xwt3h4'>
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Sum' name='[sum:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1df6xy81n27aze12cdhq20xwt3h4].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1df6xy81n27aze12cdhq20xwt3h4].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1df6xy81n27aze12cdhq20xwt3h4].[Latitude (generated)]</column>
            <column>[federated.1df6xy81n27aze12cdhq20xwt3h4].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[Longitude (generated)]' field-type='quantitative' max='6279721.8598216102' min='-6174225.3011273034' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[Latitude (generated)]' field-type='quantitative' max='5370636.857645154' min='-3245893.8003234859' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[sum:Percent_Population_Infected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1df6xy81n27aze12cdhq20xwt3h4].[sum:Percent_Population_Infected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1df6xy81n27aze12cdhq20xwt3h4].[none:location:nk]' />
              <color column='[federated.1df6xy81n27aze12cdhq20xwt3h4].[sum:Percent_Population_Infected:qk]' />
              <geometry column='[federated.1df6xy81n27aze12cdhq20xwt3h4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1df6xy81n27aze12cdhq20xwt3h4].[Latitude (generated)]</rows>
        <cols>[federated.1df6xy81n27aze12cdhq20xwt3h4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F0AAB28A-44DE-4285-9E2B-B2663B1DF361}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau lable 4)' name='federated.1anrqvl08dp84516r1b9f0v2ajfu' />
          </datasources>
          <datasource-dependencies datasource='federated.1anrqvl08dp84516r1b9f0v2ajfu'>
            <column-instance column='[percent_Population_Infected]' derivation='Avg' name='[avg:percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='percent Population Infected' datatype='real' name='[percent_Population_Infected]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[tmn:date:qk]' value='161' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]' />
              <text column='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]' />
              <text column='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[avg:percent_Population_Infected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1anrqvl08dp84516r1b9f0v2ajfu].[avg:percent_Population_Infected:qk]</rows>
        <cols>[federated.1anrqvl08dp84516r1b9f0v2ajfu].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{6DE659E1-4A18-43D5-A57B-F85E618FC919}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='15' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='51625' id='10' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='51625' id='8' type-v2='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='19033' id='5' name='Sheet 1' w='44598' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32592' id='7' name='Sheet 2' w='44598' x='800' y='20033'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51625' id='12' name='Sheet 3' w='53802' x='45398' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='46375' id='14' name='Sheet 4' w='98400' x='800' y='52625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='144' h='19033' id='5' is-fixed='true' name='Sheet 1' w='44598' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51625' id='12' is-fixed='true' name='Sheet 3' w='53802' x='45398' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32592' id='7' is-fixed='true' name='Sheet 2' w='44598' x='800' y='20033'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='14' is-fixed='true' name='Sheet 4' w='98400' x='800' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B1D4123-B568-4E9D-942A-48B241C534BD}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3468BE7D-863E-42D7-BC7B-0202B26B98AE}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{71F616E3-AC18-4FC8-A5CF-CD69B6BB2498}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1rcndce0lxjqqt14c3znm0iul3rz].[sum:Total_Death_Count:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rcndce0lxjqqt14c3znm0iul3rz].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76207A28-7D3B-43F8-9394-44F53E0BD435}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1df6xy81n27aze12cdhq20xwt3h4].[sum:Percent_Population_Infected:qk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1df6xy81n27aze12cdhq20xwt3h4].[sum:Percent_Population_Infected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E5209D4A-25B2-42D5-AC23-1E03E96D30D3}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1anrqvl08dp84516r1b9f0v2ajfu].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1anrqvl08dp84516r1b9f0v2ajfu].[none:location:nk]</field>
            <field>[federated.1anrqvl08dp84516r1b9f0v2ajfu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E580381-9366-4089-9179-89BD00AAF937}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{946ADE7C-221A-46CA-B47F-C59232242109}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0AC78A25-6B3A-4054-AAFA-D520D5C825DB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      IuMAGHOm+Q/Y+ydGM8bGDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
